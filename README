Andrey Ivanov
 Задание 7. Ну... Нет. Bochs - это совсем другая история. И мы пишем код,
        который должен работать везде. Поэтому, qemu. Иначе, что это за
        загрузчик, который может работать только в каком-то специальном
        эмуляторе?.. Всё должно быть по-честному.

        (1) Вот же лихие люди в Вашей группы. Вы из обработчика прерываний
                вызываете bad_loop... Это как? А iret где? A pusha зачем?

        (2) А какой у Вас errorcode в Bochs? И прочли ли Вы в документации,
                каким он должен быть?

        (3) Объясните, почему здесь:

                isr_common_stub:
                        add esp, 4
                        sti
                        iret

                добавляется к esp 4?
(1) собственно из обработчика 13го прерывания не выхожу а запускаю
 прогу заного с пустым стэком. pusha в принципе нужен был для
 обработчика прерываний на C. Он достаётся из структуры registers.
 И зачем делать iret обратно на ошибку. обработчики остальных
 прерываний делают iret.
(2) в qemu у меня работает тоже. Просто Bochs мне более удобен
(3) потому что в стэк ложится ещё 2 значения выше до джампа на этот адрес.

Задание 0. + за .gitignore, но минусы за SortFiles и SortFIles.o

сделал git clone в новую папку.
andrew:OS$ find ./|egrep "Sort"
./SortFiles
./SortFiles/main.cpp
к сожалению я не могу найти в своём репозитарии этих файлов. Я их давно уже удалил.
возможно вы его давно клонировали и какимто образом у вас .o не удалились автоматически.


Задача 4:
мы храним страница по квадратам 64*64. 64 = 2^6 .

#define GET_ADDR( x, y) ( (y & PAGE_MASK) << PAGES_PER_LINE_LOG2 << PAGE_SIZE_LOG4 )/* здесь мы вычисляем смещение в памяти для нашей страницы которое задаётся y координатой*/ 

+ ( ( x & PAGE_MASK ) << PAGE_SIZE_LOG4 ) /*тоже самое для x*/
+ ( ( y & PAGE_OFFSET_MASK ) << PAGE_SIZE_LOG4 ) + ( x & PAGE_OFFSET_MASK ) /*здесь считается смещения внутри страницы*/
PAGE_SIZE_LOG4 - это собствено и есть логарифм стороны квадрата . 
---> ( y & PAGE_OFFSET_MASK ) << PAGE_SIZE_LOG4  <--- это умножение y на сторону квадрата страницы. 
